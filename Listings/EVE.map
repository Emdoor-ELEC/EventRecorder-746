Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.HAL_GetTick) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.HAL_GetTick) refers to main.o(.bss.HAL_GetTick.ticks) for HAL_GetTick.ticks
    main.o(.ARM.exidx.text.HAL_GetTick) refers to main.o(.text.HAL_GetTick) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HAL_InitTick) refers to main.o(.text.HAL_InitTick) for [Anonymous Symbol]
    main.o(.text.MyFunction) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    main.o(.text.MyFunction) refers to main.o(.bss.some_error) for some_error
    main.o(.text.MyFunction) refers to main.o(.data.string) for string
    main.o(.text.MyFunction) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    main.o(.ARM.exidx.text.MyFunction) refers to main.o(.text.MyFunction) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.MPU_Config) for MPU_Config
    main.o(.text.main) refers to main.o(.text.CPU_CACHE_Enable) for CPU_CACHE_Enable
    main.o(.text.main) refers to stm32f7xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to system_stm32f7xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to led_746g_discovery.o(.text.LED_Initialize) for LED_Initialize
    main.o(.text.main) refers to buttons_746g_discovery.o(.text.Buttons_Initialize) for Buttons_Initialize
    main.o(.text.main) refers to led_thread.o(.text.Init_LEDThread) for Init_LEDThread
    main.o(.text.main) refers to button_thread.o(.text.Init_ButtonThread) for Init_ButtonThread
    main.o(.text.main) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to main.o(.text.MyFunction) for MyFunction
    main.o(.text.main) refers to main.o(.bss.some_error) for some_error
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for HAL_MPU_Disable
    main.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for HAL_MPU_ConfigRegion
    main.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for HAL_MPU_Enable
    main.o(.ARM.exidx.text.MPU_Config) refers to main.o(.text.MPU_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.CPU_CACHE_Enable) refers to main.o(.text.CPU_CACHE_Enable) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for HAL_PWREx_EnableOverDrive
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    button_thread.o(.text.Init_ButtonThread) refers to button_thread.o(.text.ButtonThread) for ButtonThread
    button_thread.o(.text.Init_ButtonThread) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    button_thread.o(.text.Init_ButtonThread) refers to button_thread.o(.bss.tid_ButtonThread) for tid_ButtonThread
    button_thread.o(.ARM.exidx.text.Init_ButtonThread) refers to button_thread.o(.text.Init_ButtonThread) for [Anonymous Symbol]
    button_thread.o(.text.ButtonThread) refers to buttons_746g_discovery.o(.text.Buttons_GetState) for Buttons_GetState
    button_thread.o(.text.ButtonThread) refers to led_746g_discovery.o(.text.LED_On) for LED_On
    button_thread.o(.text.ButtonThread) refers to main.o(.text.MyFunction) for MyFunction
    button_thread.o(.text.ButtonThread) refers to led_746g_discovery.o(.text.LED_Off) for LED_Off
    button_thread.o(.text.ButtonThread) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    button_thread.o(.ARM.exidx.text.ButtonThread) refers to button_thread.o(.text.ButtonThread) for [Anonymous Symbol]
    led_thread.o(.text.Init_LEDThread) refers to led_thread.o(.text.LEDThread) for LEDThread
    led_thread.o(.text.Init_LEDThread) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    led_thread.o(.text.Init_LEDThread) refers to led_thread.o(.bss.tid_Thread) for tid_Thread
    led_thread.o(.ARM.exidx.text.Init_LEDThread) refers to led_thread.o(.text.Init_LEDThread) for [Anonymous Symbol]
    led_thread.o(.text.LEDThread) refers to led_thread.o(.rodata.str1.1) for .L.str
    led_thread.o(.text.LEDThread) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    led_thread.o(.text.LEDThread) refers to led_746g_discovery.o(.text.LED_Off) for LED_Off
    led_thread.o(.text.LEDThread) refers to rtx_delay.o(.text.osDelay) for osDelay
    led_thread.o(.text.LEDThread) refers to led_746g_discovery.o(.text.LED_On) for LED_On
    led_thread.o(.text.LEDThread) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    led_thread.o(.ARM.exidx.text.LEDThread) refers to led_thread.o(.text.LEDThread) for [Anonymous Symbol]
    buttons_746g_discovery.o(.text.Buttons_Initialize) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    buttons_746g_discovery.o(.ARM.exidx.text.Buttons_Initialize) refers to buttons_746g_discovery.o(.text.Buttons_Initialize) for [Anonymous Symbol]
    buttons_746g_discovery.o(.text.Buttons_Uninitialize) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    buttons_746g_discovery.o(.ARM.exidx.text.Buttons_Uninitialize) refers to buttons_746g_discovery.o(.text.Buttons_Uninitialize) for [Anonymous Symbol]
    buttons_746g_discovery.o(.text.Buttons_GetState) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    buttons_746g_discovery.o(.ARM.exidx.text.Buttons_GetState) refers to buttons_746g_discovery.o(.text.Buttons_GetState) for [Anonymous Symbol]
    buttons_746g_discovery.o(.ARM.exidx.text.Buttons_GetCount) refers to buttons_746g_discovery.o(.text.Buttons_GetCount) for [Anonymous Symbol]
    led_746g_discovery.o(.text.LED_Initialize) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    led_746g_discovery.o(.ARM.exidx.text.LED_Initialize) refers to led_746g_discovery.o(.text.LED_Initialize) for [Anonymous Symbol]
    led_746g_discovery.o(.text.LED_Uninitialize) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    led_746g_discovery.o(.ARM.exidx.text.LED_Uninitialize) refers to led_746g_discovery.o(.text.LED_Uninitialize) for [Anonymous Symbol]
    led_746g_discovery.o(.text.LED_On) refers to led_746g_discovery.o(.rodata.LED_PIN) for LED_PIN
    led_746g_discovery.o(.text.LED_On) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    led_746g_discovery.o(.ARM.exidx.text.LED_On) refers to led_746g_discovery.o(.text.LED_On) for [Anonymous Symbol]
    led_746g_discovery.o(.text.LED_Off) refers to led_746g_discovery.o(.rodata.LED_PIN) for LED_PIN
    led_746g_discovery.o(.text.LED_Off) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    led_746g_discovery.o(.ARM.exidx.text.LED_Off) refers to led_746g_discovery.o(.text.LED_Off) for [Anonymous Symbol]
    led_746g_discovery.o(.text.LED_SetOut) refers to led_746g_discovery.o(.text.LED_On) for LED_On
    led_746g_discovery.o(.text.LED_SetOut) refers to led_746g_discovery.o(.text.LED_Off) for LED_Off
    led_746g_discovery.o(.ARM.exidx.text.LED_SetOut) refers to led_746g_discovery.o(.text.LED_SetOut) for [Anonymous Symbol]
    led_746g_discovery.o(.ARM.exidx.text.LED_GetCount) refers to led_746g_discovery.o(.text.LED_GetCount) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.LockTS_Overflow) for LockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UnlockTS_Overflow) for UnlockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UpdateTS) for UpdateTS
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc8) for atomic_inc8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.LockTS_Overflow) refers to eventrecorder.o(.text.LockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.UnlockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.text.atomic_wr32) for atomic_wr32
    eventrecorder.o(.ARM.exidx.text.UpdateTS) refers to eventrecorder.o(.text.UpdateTS) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr8) refers to eventrecorder.o(.text.atomic_wr8) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr32) refers to eventrecorder.o(.text.atomic_wr32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc8) refers to eventrecorder.o(.text.atomic_inc8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text._sys_open) refers to strcmpv7m_pel.o(.text) for strcmp
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.index) for stdout_putchar.index
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.buffer) for stdout_putchar.buffer
    retarget_io.o(.text.stdout_putchar) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f7xx_hal.o(.text.HAL_Init) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f7xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f7xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f7xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f7xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal.o(.text.HAL_Delay) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f7xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f7xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f7xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f7xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f7xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f7xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    startup_stm32f746xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(RESET) refers to startup_stm32f746xx.o(STACK) for __initial_sp
    startup_stm32f746xx.o(RESET) refers to startup_stm32f746xx.o(.text) for Reset_Handler
    startup_stm32f746xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f746xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(.text) refers to system_stm32f7xx.o(.text.SystemInit) for SystemInit
    startup_stm32f746xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f746xx.o(.text) refers to startup_stm32f746xx.o(HEAP) for Heap_Mem
    startup_stm32f746xx.o(.text) refers to startup_stm32f746xx.o(STACK) for Stack_Mem
    system_stm32f7xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f7xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f746xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.MyFunction), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.MPU_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.CPU_CACHE_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing button_thread.o(.text), (0 bytes).
    Removing button_thread.o(.ARM.exidx.text.Init_ButtonThread), (8 bytes).
    Removing button_thread.o(.ARM.exidx.text.ButtonThread), (8 bytes).
    Removing led_thread.o(.text), (0 bytes).
    Removing led_thread.o(.ARM.exidx.text.Init_LEDThread), (8 bytes).
    Removing led_thread.o(.ARM.exidx.text.LEDThread), (8 bytes).
    Removing buttons_746g_discovery.o(.text), (0 bytes).
    Removing buttons_746g_discovery.o(.ARM.exidx.text.Buttons_Initialize), (8 bytes).
    Removing buttons_746g_discovery.o(.text.Buttons_Uninitialize), (22 bytes).
    Removing buttons_746g_discovery.o(.ARM.exidx.text.Buttons_Uninitialize), (8 bytes).
    Removing buttons_746g_discovery.o(.ARM.exidx.text.Buttons_GetState), (8 bytes).
    Removing buttons_746g_discovery.o(.text.Buttons_GetCount), (4 bytes).
    Removing buttons_746g_discovery.o(.ARM.exidx.text.Buttons_GetCount), (8 bytes).
    Removing led_746g_discovery.o(.text), (0 bytes).
    Removing led_746g_discovery.o(.ARM.exidx.text.LED_Initialize), (8 bytes).
    Removing led_746g_discovery.o(.text.LED_Uninitialize), (20 bytes).
    Removing led_746g_discovery.o(.ARM.exidx.text.LED_Uninitialize), (8 bytes).
    Removing led_746g_discovery.o(.ARM.exidx.text.LED_On), (8 bytes).
    Removing led_746g_discovery.o(.ARM.exidx.text.LED_Off), (8 bytes).
    Removing led_746g_discovery.o(.text.LED_SetOut), (62 bytes).
    Removing led_746g_discovery.o(.ARM.exidx.text.LED_SetOut), (8 bytes).
    Removing led_746g_discovery.o(.text.LED_GetCount), (4 bytes).
    Removing led_746g_discovery.o(.ARM.exidx.text.LED_GetCount), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (150 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (12 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (146 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord4), (150 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UpdateTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc8), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.text._sys_open), (132 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.text._sys_close), (74 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.text._sys_write), (118 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.text.stdout_putchar), (124 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text._sys_read), (88 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.text._sys_istty), (72 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.text._sys_seek), (82 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.text._sys_flen), (72 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget_io.o(.rodata.__stdin_name), (7 bytes).
    Removing retarget_io.o(.rodata.__stdout_name), (8 bytes).
    Removing retarget_io.o(.rodata.__stderr_name), (8 bytes).
    Removing retarget_io.o(.rodata.str1.1), (23 bytes).
    Removing retarget_io.o(.bss.stdout_putchar.index), (4 bytes).
    Removing retarget_io.o(.bss.stdout_putchar.buffer), (8 bytes).
    Removing stm32f7xx_hal.o(.text), (0 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_InitTick), (112 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SetTickFreq), (106 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_Delay), (66 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal.o(.data.uwTickFreq), (1 bytes).
    Removing stm32f7xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f7xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority), (50 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority), (108 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (56 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (36 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority), (66 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (64 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive), (64 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (604 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (38 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (86 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (56 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (210 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (56 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (58 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (110 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (106 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (106 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (190 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (240 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (322 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit), (570 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (200 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (34 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (320 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (84 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (2162 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (486 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (752 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (200 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (86 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (200 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (92 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing system_stm32f7xx.o(.text), (0 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f7xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

673 unused section(s) (total 20306 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m_pel.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    Button_Thread.c                          0x00000000   Number         0  button_thread.o ABSOLUTE
    Buttons_746G_Discovery.c                 0x00000000   Number         0  buttons_746g_discovery.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    LED_746G_Discovery.c                     0x00000000   Number         0  led_746g_discovery.o ABSOLUTE
    LED_Thread.c                             0x00000000   Number         0  led_thread.o ABSOLUTE
    RTE/Device/STM32F746NGHx/startup_stm32f746xx.s 0x00000000   Number         0  startup_stm32f746xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f7xx_hal.c                          0x00000000   Number         0  stm32f7xx_hal.o ABSOLUTE
    stm32f7xx_hal_cortex.c                   0x00000000   Number         0  stm32f7xx_hal_cortex.o ABSOLUTE
    stm32f7xx_hal_gpio.c                     0x00000000   Number         0  stm32f7xx_hal_gpio.o ABSOLUTE
    stm32f7xx_hal_pwr.c                      0x00000000   Number         0  stm32f7xx_hal_pwr.o ABSOLUTE
    stm32f7xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f7xx_hal_pwr_ex.o ABSOLUTE
    stm32f7xx_hal_rcc.c                      0x00000000   Number         0  stm32f7xx_hal_rcc.o ABSOLUTE
    stm32f7xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f7xx_hal_rcc_ex.o ABSOLUTE
    system_stm32f7xx.c                       0x00000000   Number         0  system_stm32f7xx.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      456  startup_stm32f746xx.o(RESET)
    !!!main                                  0x080001c8   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001d0   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x0800022c   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x08000248   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x0800024c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000268   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800026a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800026e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000270   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000272   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000274   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000274   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000274   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800027a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000282   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000286   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000286   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800028e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000290   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000290   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000294   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800029c   Number         0  startup_stm32f746xx.o(.text)
    .text                                    0x0800029c   Section       64  startup_stm32f746xx.o(.text)
    [Anonymous Symbol]                       0x080002dc   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x08000304   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x08000314   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x08000326   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x0800033c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x08000358   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x0800035a   Number         0  irq_armv7m.o(.text)
    .text                                    0x080003a4   Section      240  lludivv7m.o(.text)
    .text                                    0x08000494   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800051e   Section       68  rt_memclr.o(.text)
    .text                                    0x08000562   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080005b0   Section        0  heapauxi.o(.text)
    .text                                    0x080005b6   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800061a   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000664   Section        0  exit.o(.text)
    .text                                    0x08000678   Section        8  libspace.o(.text)
    .text                                    0x08000680   Section        0  sys_exit.o(.text)
    .text                                    0x0800068c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800068e   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000690   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x080006a8   Section        0  button_thread.o(.text.ButtonThread)
    [Anonymous Symbol]                       0x080006e8   Section        0  buttons_746g_discovery.o(.text.Buttons_GetState)
    [Anonymous Symbol]                       0x08000718   Section        0  buttons_746g_discovery.o(.text.Buttons_Initialize)
    CPU_CACHE_Enable                         0x08000761   Thumb Code   222  main.o(.text.CPU_CACHE_Enable)
    [Anonymous Symbol]                       0x08000760   Section        0  main.o(.text.CPU_CACHE_Enable)
    Error_Handler                            0x08000841   Thumb Code     4  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x08000840   Section        0  main.o(.text.Error_Handler)
    EventCheckFilter                         0x08000849   Thumb Code    60  eventrecorder.o(.text.EventCheckFilter)
    [Anonymous Symbol]                       0x08000848   Section        0  eventrecorder.o(.text.EventCheckFilter)
    EventGetTS                               0x08000889   Thumb Code    90  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x08000888   Section        0  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x080008e8   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x08000948   Section        0  eventrecorder.o(.text.EventRecordData)
    EventRecordItem                          0x08000ad1   Thumb Code   254  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08000ad0   Section        0  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08000bd0   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x08000c68   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x08000e30   Section        0  eventrecorder.o(.text.EventRecorderStart)
    [Anonymous Symbol]                       0x08000e80   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x08000e90   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    GetContext                               0x08000eb9   Thumb Code    18  eventrecorder.o(.text.GetContext)
    [Anonymous Symbol]                       0x08000eb8   Section        0  eventrecorder.o(.text.GetContext)
    GetRecordIndex                           0x08000ed1   Thumb Code    18  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x08000ed0   Section        0  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x08000ee8   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x080012d8   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    [Anonymous Symbol]                       0x08001308   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08001338   Section        0  main.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x080013a0   Section        0  stm32f7xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080013d0   Section        0  main.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x080013e0   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion)
    [Anonymous Symbol]                       0x08001480   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable)
    [Anonymous Symbol]                       0x080014a8   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable)
    [Anonymous Symbol]                       0x080014d8   Section        0  stm32f7xx_hal.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x080014e0   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080014f0   Section        0  stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    [Anonymous Symbol]                       0x080015b8   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08001828   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08001910   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    IncrementRecordsDumped                   0x08002029   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsDumped)
    [Anonymous Symbol]                       0x08002028   Section        0  eventrecorder.o(.text.IncrementRecordsDumped)
    IncrementRecordsWritten                  0x08002041   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x08002040   Section        0  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x08002058   Section        0  button_thread.o(.text.Init_ButtonThread)
    [Anonymous Symbol]                       0x08002098   Section        0  led_thread.o(.text.Init_LEDThread)
    [Anonymous Symbol]                       0x080020d8   Section        0  led_thread.o(.text.LEDThread)
    [Anonymous Symbol]                       0x08002128   Section        0  led_746g_discovery.o(.text.LED_Initialize)
    [Anonymous Symbol]                       0x08002170   Section        0  led_746g_discovery.o(.text.LED_Off)
    [Anonymous Symbol]                       0x080021b0   Section        0  led_746g_discovery.o(.text.LED_On)
    LockRecord                               0x080021f1   Thumb Code    54  eventrecorder.o(.text.LockRecord)
    [Anonymous Symbol]                       0x080021f0   Section        0  eventrecorder.o(.text.LockRecord)
    LockTS_Overflow                          0x08002229   Thumb Code    18  eventrecorder.o(.text.LockTS_Overflow)
    [Anonymous Symbol]                       0x08002228   Section        0  eventrecorder.o(.text.LockTS_Overflow)
    MPU_Config                               0x08002241   Thumb Code    78  main.o(.text.MPU_Config)
    [Anonymous Symbol]                       0x08002240   Section        0  main.o(.text.MPU_Config)
    MessageQueueGet                          0x0800228f   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x0800228e   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x080022cf   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080022ce   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08002327   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08002326   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08002348   Section        0  main.o(.text.MyFunction)
    [Anonymous Symbol]                       0x08002390   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08002398   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x080023b8   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x080023bc   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x080023c4   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x080023f4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x080023f8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x080023fc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08002400   Number         4  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x08002405   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08002404   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08002411   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08002410   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08002417   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08002416   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x08002423   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08002422   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08002429   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08002428   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    SystemClock_Config                       0x08002431   Thumb Code   120  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002430   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x080024a8   Section        0  system_stm32f7xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x080025d8   Section        0  system_stm32f7xx.o(.text.SystemInit)
    ThreadFlagsCheck                         0x080025eb   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x080025ea   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x08002651   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08002650   Section        0  rtx_timer.o(.text.TimerInsert)
    UnlockRecord                             0x08002699   Thumb Code    50  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x08002698   Section        0  eventrecorder.o(.text.UnlockRecord)
    UnlockTS_Overflow                        0x080026d1   Thumb Code    18  eventrecorder.o(.text.UnlockTS_Overflow)
    [Anonymous Symbol]                       0x080026d0   Section        0  eventrecorder.o(.text.UnlockTS_Overflow)
    UpdateTS                                 0x080026e9   Thumb Code    26  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x080026e8   Section        0  eventrecorder.o(.text.UpdateTS)
    __NVIC_SetPriorityGrouping               0x08002709   Thumb Code    60  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08002708   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    __tagsym$$used.1                         0x08002748   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08002748   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08002768   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08002768   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08002780   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08002780   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080027b8   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080027b8   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080027d8   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    atomic_inc32                             0x080027e1   Thumb Code    32  eventrecorder.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x080027e0   Section        0  eventrecorder.o(.text.atomic_inc32)
    atomic_inc8                              0x08002801   Thumb Code    36  eventrecorder.o(.text.atomic_inc8)
    [Anonymous Symbol]                       0x08002800   Section        0  eventrecorder.o(.text.atomic_inc8)
    atomic_wr32                              0x08002829   Thumb Code    32  eventrecorder.o(.text.atomic_wr32)
    [Anonymous Symbol]                       0x08002828   Section        0  eventrecorder.o(.text.atomic_wr32)
    atomic_wr8                               0x08002849   Thumb Code    40  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x08002848   Section        0  eventrecorder.o(.text.atomic_wr8)
    crc16_ccitt                              0x08002871   Thumb Code   130  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x08002870   Section        0  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x080028f8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08002954   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08002974   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08002978   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x080029a0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x080029a4   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_0                            0x080029c4   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_1                            0x080029c8   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x080029cc   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x080029f4   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080029f8   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x08002a18   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08002a1c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x08002a88   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08002a8c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x08002b08   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08002b0c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x08002b2c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08002b30   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x08002b50   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08002b54   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x08002b74   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08002b78   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x08002b98   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08002ba0   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x08002bd0   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x08002bd8   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08002bdc   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x08002bde   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08002c4a   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08002c8c   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08002cc2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08002cfc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08002d46   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x08002d7f   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08002d7e   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08002e28   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x08002e48   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x08002e4c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08002e94   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x08002edc   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08002f64   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08002fd0   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x08002fd5   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08002fd4   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08003009   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08003008   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x08003085   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08003084   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x080030c0   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x08003111   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08003110   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08003130   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08003181   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08003180   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.51_0                            0x080031d4   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadJoinWakeup                    0x080031d9   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x080031d8   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x080031f6   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08003208   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08003234   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08003248   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x0800326f   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800326e   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08003298   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x080032a8   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080032ac   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x080032c0   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_1                            0x080032f0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x080032f4   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08003300   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x08003338   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x0800333c   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x0800336c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x080033e0   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x080033e4   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x080033fc   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x08003400   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08003404   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08003425   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08003424   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08003490   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08003494   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x0800349c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080034a0   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.16_0                            0x080034c0   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x080034c4   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.25_0                            0x080034e4   Number         4  rtx_thread.o(.text.osThreadYield)
    os_kernel_is_active                      0x080034e9   Thumb Code    54  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x080034e8   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    svcRtxDelay                              0x0800351f   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800351e   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08003535   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08003534   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x0800353d   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x0800353c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.14_0                            0x08003544   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x08003549   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08003548   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x0800363c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x08003640   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x08003644   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08003649   Thumb Code   124  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08003648   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_0                            0x080036c4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x080036c8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x080036cc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x080036d0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x080036d5   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080036d4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x0800379c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x080037a1   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080037a0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x080038b0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x080038b4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x080038b9   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080038b8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08003961   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08003960   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x080039ec   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x080039f1   Thumb Code   172  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080039f0   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08003a9d   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08003a9c   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x08003b00   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08003b05   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08003b04   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x08003bb4   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08003bb9   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08003bb8   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.53_0                            0x08003c00   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08003c05   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08003c04   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_1                            0x08003ddc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_2                            0x08003de0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_3                            0x08003de4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_4                            0x08003de8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x08003ded   Thumb Code    52  rtx_thread.o(.text.svcRtxThreadYield)
    [Anonymous Symbol]                       0x08003dec   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.46_0                            0x08003e20   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    $v0                                      0x08003e24   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08003e24   Section       26  fpinit.o(x$fpl$fpinit)
    __tagsym$$used.4                         0x08003e40   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x08003eb0   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x08003ef8   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    LED_PIN                                  0x08003f10   Data           8  led_746g_discovery.o(.rodata.LED_PIN)
    [Anonymous Symbol]                       0x08003f10   Section        0  led_746g_discovery.o(.rodata.LED_PIN)
    os_idle_thread_attr                      0x08003f1c   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08003f1c   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08003f40   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08003f40   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08003f58   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08003f58   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08003f7c   Data          13  led_thread.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003f7c   Section        0  led_thread.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003f8c   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss                                     0x200100c0   Section       96  libspace.o(.bss)
    HAL_GetTick.ticks                        0x20010120   Data           4  main.o(.bss.HAL_GetTick.ticks)
    [Anonymous Symbol]                       0x20010120   Section        0  main.o(.bss.HAL_GetTick.ticks)
    TS_OverflowLock                          0x20010124   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0x20010124   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    EventBuffer                              0x20010140   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20010140   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20010540   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x200105c0   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x200105e8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x200105e8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20010628   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20018628   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20018628   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x2001862c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x2001862c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20018660   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20018660   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200186b0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200186b0   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200186f4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20018738   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20018738   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20018938   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20018938   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20018b38   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20018b38   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x20018b48   Data         512  startup_stm32f746xx.o(HEAP)
    HEAP                                     0x20018b48   Section      512  startup_stm32f746xx.o(HEAP)
    Stack_Mem                                0x20018d48   Data        1024  startup_stm32f746xx.o(STACK)
    STACK                                    0x20018d48   Section     1024  startup_stm32f746xx.o(STACK)
    __initial_sp                             0x20019148   Data           0  startup_stm32f746xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi5$EXTD16$VFPS$VFMA$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000001c8   Number         0  startup_stm32f746xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f746xx.o(RESET)
    __Vectors_End                            0x080001c8   Data           0  startup_stm32f746xx.o(RESET)
    __main                                   0x080001c9   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001d1   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080001db   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x0800022d   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x08000249   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x0800024d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000269   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800026b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000271   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000275   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000275   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000275   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800027b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000283   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000287   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000287   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800028f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000291   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000291   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000295   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800029d   Thumb Code     8  startup_stm32f746xx.o(.text)
    NMI_Handler                              0x080002a5   Thumb Code     2  startup_stm32f746xx.o(.text)
    HardFault_Handler                        0x080002a7   Thumb Code     2  startup_stm32f746xx.o(.text)
    MemManage_Handler                        0x080002a9   Thumb Code     2  startup_stm32f746xx.o(.text)
    BusFault_Handler                         0x080002ab   Thumb Code     2  startup_stm32f746xx.o(.text)
    UsageFault_Handler                       0x080002ad   Thumb Code     2  startup_stm32f746xx.o(.text)
    DebugMon_Handler                         0x080002b1   Thumb Code     2  startup_stm32f746xx.o(.text)
    ADC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_TX_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_TX_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    CEC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DCMI_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2D_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    ETH_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI0_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI15_10_IRQHandler                     0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI1_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI2_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI3_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI4_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI9_5_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    FLASH_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    FMC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    FPU_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C1_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C1_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C2_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C2_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C3_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C3_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C4_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C4_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    LPTIM1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    LTDC_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    LTDC_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_FS_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    PVD_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    QUADSPI_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    RCC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    RNG_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SAI1_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SAI2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SDMMC1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPDIF_RX_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI1_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI3_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI4_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI5_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI6_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_CC_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM3_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM4_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM5_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM7_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_CC_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART4_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART5_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART7_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART8_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART2_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART3_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART6_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    WWDG_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f746xx.o(.text)
    __user_initial_stackheap                 0x080002b9   Thumb Code     0  startup_stm32f746xx.o(.text)
    SVC_Handler                              0x080002dd   Thumb Code   154  irq_armv7m.o(.text)
    PendSV_Handler                           0x08000377   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x08000387   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_uldivmod                         0x080003a5   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x080003a5   Thumb Code   240  lludivv7m.o(.text)
    __aeabi_memcpy                           0x08000495   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000495   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080004fb   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x0800051f   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800051f   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x08000523   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000563   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000563   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000563   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000567   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080005b1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080005b3   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080005b5   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080005b7   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080005b7   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080005b7   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080005ff   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x0800061b   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000665   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000679   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000679   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000681   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0800068d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800068d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800068f   Thumb Code     0  indicate_semi.o(.text)
    _fp_init                                 0x08000691   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    ButtonThread                             0x080006a9   Thumb Code    62  button_thread.o(.text.ButtonThread)
    Buttons_GetState                         0x080006e9   Thumb Code    46  buttons_746g_discovery.o(.text.Buttons_GetState)
    Buttons_Initialize                       0x08000719   Thumb Code    68  buttons_746g_discovery.o(.text.Buttons_Initialize)
    EventRecord2                             0x080008e9   Thumb Code    90  eventrecorder.o(.text.EventRecord2)
    EventRecordData                          0x08000949   Thumb Code   388  eventrecorder.o(.text.EventRecordData)
    EventRecorderEnable                      0x08000bd1   Thumb Code   146  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x08000c69   Thumb Code   454  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderStart                       0x08000e31   Thumb Code    74  eventrecorder.o(.text.EventRecorderStart)
    EventRecorderTimerGetCount               0x08000e81   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerSetup                  0x08000e91   Thumb Code    36  eventrecorder.o(.text.EventRecorderTimerSetup)
    HAL_GPIO_Init                            0x08000ee9   Thumb Code  1004  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_ReadPin                         0x080012d9   Thumb Code    46  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    HAL_GPIO_WritePin                        0x08001309   Thumb Code    46  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08001339   Thumb Code   102  main.o(.text.HAL_GetTick)
    HAL_Init                                 0x080013a1   Thumb Code    46  stm32f7xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x080013d1   Thumb Code    10  main.o(.text.HAL_InitTick)
    HAL_MPU_ConfigRegion                     0x080013e1   Thumb Code   158  stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion)
    HAL_MPU_Disable                          0x08001481   Thumb Code    34  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable)
    HAL_MPU_Enable                           0x080014a9   Thumb Code    48  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable)
    HAL_MspInit                              0x080014d9   Thumb Code     2  stm32f7xx_hal.o(.text.HAL_MspInit)
    HAL_NVIC_SetPriorityGrouping             0x080014e1   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_EnableOverDrive                0x080014f1   Thumb Code   198  stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    HAL_RCC_ClockConfig                      0x080015b9   Thumb Code   620  stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetSysClockFreq                  0x08001829   Thumb Code   230  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08001911   Thumb Code  1816  stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    Init_ButtonThread                        0x08002059   Thumb Code    58  button_thread.o(.text.Init_ButtonThread)
    Init_LEDThread                           0x08002099   Thumb Code    58  led_thread.o(.text.Init_LEDThread)
    LEDThread                                0x080020d9   Thumb Code    76  led_thread.o(.text.LEDThread)
    LED_Initialize                           0x08002129   Thumb Code    70  led_746g_discovery.o(.text.LED_Initialize)
    LED_Off                                  0x08002171   Thumb Code    58  led_746g_discovery.o(.text.LED_Off)
    LED_On                                   0x080021b1   Thumb Code    58  led_746g_discovery.o(.text.LED_On)
    MyFunction                               0x08002349   Thumb Code    70  main.o(.text.MyFunction)
    OS_Tick_AcknowledgeIRQ                   0x08002391   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08002399   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x080023bd   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x080023c5   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    SystemCoreClockUpdate                    0x080024a9   Thumb Code   302  system_stm32f7xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x080025d9   Thumb Code    18  system_stm32f7xx.o(.text.SystemInit)
    _mutex_acquire                           0x08002749   Thumb Code    32  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08002769   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08002781   Thumb Code    50  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x080027b9   Thumb Code    28  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080027d9   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    main                                     0x080028f9   Thumb Code    90  main.o(.text.main)
    osDelay                                  0x08002955   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x08002979   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x080029a5   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x080029cd   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080029f9   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08002a1d   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08002a8d   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08002b0d   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08002b31   Thumb Code    32  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08002b55   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08002b79   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08002ba1   Thumb Code    46  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08002bd1   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x08002bd9   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x08002bdd   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08002bdf   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08002c4b   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08002c8d   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08002cc3   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08002cfd   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08002d47   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x08002e29   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08002e4d   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08002e95   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08002edd   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08002f65   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x080030c1   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08003131   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x080031f7   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08003209   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08003235   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08003249   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08003299   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080032ad   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x080032c1   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x080032f5   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08003301   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x0800333d   Thumb Code    48  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x0800336d   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x080033e5   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08003405   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08003495   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x080034a1   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x080034c5   Thumb Code    32  rtx_thread.o(.text.osThreadYield)
    $Super$$_fp_init                         0x08003e25   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08003e3d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08003e3d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxConfig                              0x08003e40   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08003eb0   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x08003ee8   Data          16  system_stm32f7xx.o(.rodata.AHBPrescTable)
    EventRecorderInfo                        0x08003ef8   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    osRtxUserSVC                             0x08003f18   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08003f98   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003fb8   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20010000   Data           4  system_stm32f7xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20010004   Data         164  rtx_kernel.o(.data.os)
    string                                   0x200100a8   Data          10  main.o(.data.string)
    uwTickPrio                               0x200100b4   Data           4  stm32f7xx_hal.o(.data.uwTickPrio)
    __libspace_start                         0x200100c0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20010120   Data           0  libspace.o(.bss)
    .bss.os.msgqueue.cb$$Base                0x2001862c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20018660   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200186b0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20018738   Number         0  rtx_lib.o(.bss.os.thread.cb)
    some_error                               0x20018b3c   Data           4  main.o(.bss.some_error)
    tid_ButtonThread                         0x20018b40   Data           4  button_thread.o(.bss.tid_ButtonThread)
    tid_Thread                               0x20018b44   Data           4  led_thread.o(.bss.tid_Thread)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001c9

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004080, Max: 0x00100000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003fb8, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001c8   Data   RO          528    RESET               startup_stm32f746xx.o
    0x080001c8   0x080001c8   0x00000008   Code   RO         1049  * !!!main             c_w.l(__main.o)
    0x080001d0   0x080001d0   0x0000005c   Code   RO         1224    !!!scatter          c_w.l(__scatter.o)
    0x0800022c   0x0800022c   0x0000001a   Code   RO         1228    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000246   0x08000246   0x00000002   PAD
    0x08000248   0x08000248   0x00000002   Code   RO         1225    !!handler_null      c_w.l(__scatter.o)
    0x0800024a   0x0800024a   0x00000002   PAD
    0x0800024c   0x0800024c   0x0000001c   Code   RO         1230    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000268   0x08000268   0x00000002   Code   RO         1088    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800026a   0x0800026a   0x00000004   Code   RO         1100    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1103    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1105    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1108    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1110    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1112    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1115    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1117    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1119    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1121    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1123    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1125    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1127    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1129    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1131    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1133    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1135    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1139    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1141    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1143    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1145    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000002   Code   RO         1146    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000002   Code   RO         1179    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1207    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1209    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1212    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1215    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1217    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1220    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000002   Code   RO         1221    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000274   0x08000274   0x00000000   Code   RO         1053    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000274   0x08000274   0x00000000   Code   RO         1061    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000274   0x08000274   0x00000006   Code   RO         1073    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800027a   0x0800027a   0x00000008   Code   RO         1062    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000282   0x08000282   0x00000004   Code   RO         1064    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000286   0x08000286   0x00000000   Code   RO         1066    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000286   0x08000286   0x00000008   Code   RO         1067    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800028e   0x0800028e   0x00000002   Code   RO         1092    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000290   0x08000290   0x00000000   Code   RO         1152    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000290   0x08000290   0x00000004   Code   RO         1153    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000294   0x08000294   0x00000006   Code   RO         1154    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800029a   0x0800029a   0x00000002   PAD
    0x0800029c   0x0800029c   0x00000040   Code   RO          529    .text               startup_stm32f746xx.o
    0x080002dc   0x080002dc   0x000000c8   Code   RO          859    .text               RTX_CM4F.lib(irq_armv7m.o)
    0x080003a4   0x080003a4   0x000000f0   Code   RO         1037    .text               c_w.l(lludivv7m.o)
    0x08000494   0x08000494   0x0000008a   Code   RO         1039    .text               c_w.l(rt_memcpy_v6.o)
    0x0800051e   0x0800051e   0x00000044   Code   RO         1041    .text               c_w.l(rt_memclr.o)
    0x08000562   0x08000562   0x0000004e   Code   RO         1043    .text               c_w.l(rt_memclr_w.o)
    0x080005b0   0x080005b0   0x00000006   Code   RO         1047    .text               c_w.l(heapauxi.o)
    0x080005b6   0x080005b6   0x00000064   Code   RO         1058    .text               c_w.l(rt_memcpy_w.o)
    0x0800061a   0x0800061a   0x0000004a   Code   RO         1077    .text               c_w.l(sys_stackheap_outer.o)
    0x08000664   0x08000664   0x00000012   Code   RO         1079    .text               c_w.l(exit.o)
    0x08000676   0x08000676   0x00000002   PAD
    0x08000678   0x08000678   0x00000008   Code   RO         1089    .text               c_w.l(libspace.o)
    0x08000680   0x08000680   0x0000000c   Code   RO         1147    .text               c_w.l(sys_exit.o)
    0x0800068c   0x0800068c   0x00000002   Code   RO         1168    .text               c_w.l(use_no_semi.o)
    0x0800068e   0x0800068e   0x00000000   Code   RO         1170    .text               c_w.l(indicate_semi.o)
    0x0800068e   0x0800068e   0x00000002   PAD
    0x08000690   0x08000690   0x00000016   Code   RO           91    .text.$Sub$$_fp_init  rtx_lib.o
    0x080006a6   0x080006a6   0x00000002   PAD
    0x080006a8   0x080006a8   0x0000003e   Code   RO           31    .text.ButtonThread  button_thread.o
    0x080006e6   0x080006e6   0x00000002   PAD
    0x080006e8   0x080006e8   0x0000002e   Code   RO           58    .text.Buttons_GetState  buttons_746g_discovery.o
    0x08000716   0x08000716   0x00000002   PAD
    0x08000718   0x08000718   0x00000044   Code   RO           54    .text.Buttons_Initialize  buttons_746g_discovery.o
    0x0800075c   0x0800075c   0x00000004   PAD
    0x08000760   0x08000760   0x000000de   Code   RO           12    .text.CPU_CACHE_Enable  main.o
    0x0800083e   0x0800083e   0x00000002   PAD
    0x08000840   0x08000840   0x00000004   Code   RO           16    .text.Error_Handler  main.o
    0x08000844   0x08000844   0x00000004   PAD
    0x08000848   0x08000848   0x0000003c   Code   RO          164    .text.EventCheckFilter  eventrecorder.o
    0x08000884   0x08000884   0x00000004   PAD
    0x08000888   0x08000888   0x0000005a   Code   RO          150    .text.EventGetTS    eventrecorder.o
    0x080008e2   0x080008e2   0x00000006   PAD
    0x080008e8   0x080008e8   0x0000005a   Code   RO          168    .text.EventRecord2  eventrecorder.o
    0x08000942   0x08000942   0x00000006   PAD
    0x08000948   0x08000948   0x00000184   Code   RO          162    .text.EventRecordData  eventrecorder.o
    0x08000acc   0x08000acc   0x00000004   PAD
    0x08000ad0   0x08000ad0   0x000000fe   Code   RO          152    .text.EventRecordItem  eventrecorder.o
    0x08000bce   0x08000bce   0x00000002   PAD
    0x08000bd0   0x08000bd0   0x00000092   Code   RO          148    .text.EventRecorderEnable  eventrecorder.o
    0x08000c62   0x08000c62   0x00000006   PAD
    0x08000c68   0x08000c68   0x000001c6   Code   RO          144    .text.EventRecorderInitialize  eventrecorder.o
    0x08000e2e   0x08000e2e   0x00000002   PAD
    0x08000e30   0x08000e30   0x0000004a   Code   RO          154    .text.EventRecorderStart  eventrecorder.o
    0x08000e7a   0x08000e7a   0x00000006   PAD
    0x08000e80   0x08000e80   0x0000000c   Code   RO          142    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x08000e8c   0x08000e8c   0x00000004   PAD
    0x08000e90   0x08000e90   0x00000024   Code   RO          138    .text.EventRecorderTimerSetup  eventrecorder.o
    0x08000eb4   0x08000eb4   0x00000004   PAD
    0x08000eb8   0x08000eb8   0x00000012   Code   RO          166    .text.GetContext    eventrecorder.o
    0x08000eca   0x08000eca   0x00000006   PAD
    0x08000ed0   0x08000ed0   0x00000012   Code   RO          182    .text.GetRecordIndex  eventrecorder.o
    0x08000ee2   0x08000ee2   0x00000006   PAD
    0x08000ee8   0x08000ee8   0x000003ec   Code   RO          374    .text.HAL_GPIO_Init  stm32f7xx_hal_gpio.o
    0x080012d4   0x080012d4   0x00000004   PAD
    0x080012d8   0x080012d8   0x0000002e   Code   RO          378    .text.HAL_GPIO_ReadPin  stm32f7xx_hal_gpio.o
    0x08001306   0x08001306   0x00000002   PAD
    0x08001308   0x08001308   0x0000002e   Code   RO          380    .text.HAL_GPIO_WritePin  stm32f7xx_hal_gpio.o
    0x08001336   0x08001336   0x00000002   PAD
    0x08001338   0x08001338   0x00000066   Code   RO            2    .text.HAL_GetTick   main.o
    0x0800139e   0x0800139e   0x00000002   PAD
    0x080013a0   0x080013a0   0x0000002e   Code   RO          235    .text.HAL_Init      stm32f7xx_hal.o
    0x080013ce   0x080013ce   0x00000002   PAD
    0x080013d0   0x080013d0   0x0000000a   Code   RO            4    .text.HAL_InitTick  main.o
    0x080013da   0x080013da   0x00000006   PAD
    0x080013e0   0x080013e0   0x0000009e   Code   RO          335    .text.HAL_MPU_ConfigRegion  stm32f7xx_hal_cortex.o
    0x0800147e   0x0800147e   0x00000002   PAD
    0x08001480   0x08001480   0x00000022   Code   RO          331    .text.HAL_MPU_Disable  stm32f7xx_hal_cortex.o
    0x080014a2   0x080014a2   0x00000006   PAD
    0x080014a8   0x080014a8   0x00000030   Code   RO          333    .text.HAL_MPU_Enable  stm32f7xx_hal_cortex.o
    0x080014d8   0x080014d8   0x00000002   Code   RO          239    .text.HAL_MspInit   stm32f7xx_hal.o
    0x080014da   0x080014da   0x00000006   PAD
    0x080014e0   0x080014e0   0x00000010   Code   RO          303    .text.HAL_NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x080014f0   0x080014f0   0x000000c6   Code   RO          454    .text.HAL_PWREx_EnableOverDrive  stm32f7xx_hal_pwr_ex.o
    0x080015b6   0x080015b6   0x00000002   PAD
    0x080015b8   0x080015b8   0x0000026c   Code   RO          475    .text.HAL_RCC_ClockConfig  stm32f7xx_hal_rcc.o
    0x08001824   0x08001824   0x00000004   PAD
    0x08001828   0x08001828   0x000000e6   Code   RO          477    .text.HAL_RCC_GetSysClockFreq  stm32f7xx_hal_rcc.o
    0x0800190e   0x0800190e   0x00000002   PAD
    0x08001910   0x08001910   0x00000718   Code   RO          473    .text.HAL_RCC_OscConfig  stm32f7xx_hal_rcc.o
    0x08002028   0x08002028   0x00000012   Code   RO          190    .text.IncrementRecordsDumped  eventrecorder.o
    0x0800203a   0x0800203a   0x00000006   PAD
    0x08002040   0x08002040   0x00000012   Code   RO          188    .text.IncrementRecordsWritten  eventrecorder.o
    0x08002052   0x08002052   0x00000006   PAD
    0x08002058   0x08002058   0x0000003a   Code   RO           29    .text.Init_ButtonThread  button_thread.o
    0x08002092   0x08002092   0x00000006   PAD
    0x08002098   0x08002098   0x0000003a   Code   RO           41    .text.Init_LEDThread  led_thread.o
    0x080020d2   0x080020d2   0x00000006   PAD
    0x080020d8   0x080020d8   0x0000004c   Code   RO           43    .text.LEDThread     led_thread.o
    0x08002124   0x08002124   0x00000004   PAD
    0x08002128   0x08002128   0x00000046   Code   RO           69    .text.LED_Initialize  led_746g_discovery.o
    0x0800216e   0x0800216e   0x00000002   PAD
    0x08002170   0x08002170   0x0000003a   Code   RO           75    .text.LED_Off       led_746g_discovery.o
    0x080021aa   0x080021aa   0x00000006   PAD
    0x080021b0   0x080021b0   0x0000003a   Code   RO           73    .text.LED_On        led_746g_discovery.o
    0x080021ea   0x080021ea   0x00000006   PAD
    0x080021f0   0x080021f0   0x00000036   Code   RO          184    .text.LockRecord    eventrecorder.o
    0x08002226   0x08002226   0x00000002   PAD
    0x08002228   0x08002228   0x00000012   Code   RO          172    .text.LockTS_Overflow  eventrecorder.o
    0x0800223a   0x0800223a   0x00000006   PAD
    0x08002240   0x08002240   0x0000004e   Code   RO           10    .text.MPU_Config    main.o
    0x0800228e   0x0800228e   0x00000040   Code   RO          975    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080022ce   0x080022ce   0x00000058   Code   RO          969    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002326   0x08002326   0x0000001c   Code   RO          967    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002342   0x08002342   0x00000006   PAD
    0x08002348   0x08002348   0x00000046   Code   RO            6    .text.MyFunction    main.o
    0x0800238e   0x0800238e   0x00000002   PAD
    0x08002390   0x08002390   0x00000008   Code   RO         1015    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x08002398   0x08002398   0x00000024   Code   RO         1011    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x080023bc   0x080023bc   0x00000006   Code   RO         1017    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x080023c2   0x080023c2   0x00000002   PAD
    0x080023c4   0x080023c4   0x00000040   Code   RO         1009    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x08002404   0x08002404   0x0000000c   Code   RO          608    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_kernel.o)
    0x08002410   0x08002410   0x00000006   Code   RO          748    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_thread.o)
    0x08002416   0x08002416   0x0000000c   Code   RO          983    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002422   0x08002422   0x00000006   Code   RO          610    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_kernel.o)
    0x08002428   0x08002428   0x00000006   Code   RO          985    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0800242e   0x0800242e   0x00000002   PAD
    0x08002430   0x08002430   0x00000078   Code   RO           14    .text.SystemClock_Config  main.o
    0x080024a8   0x080024a8   0x0000012e   Code   RO          538    .text.SystemCoreClockUpdate  system_stm32f7xx.o
    0x080025d6   0x080025d6   0x00000002   PAD
    0x080025d8   0x080025d8   0x00000012   Code   RO          536    .text.SystemInit    system_stm32f7xx.o
    0x080025ea   0x080025ea   0x00000064   Code   RO          700    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x0800264e   0x0800264e   0x00000002   PAD
    0x08002650   0x08002650   0x00000044   Code   RO          800    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x08002694   0x08002694   0x00000004   PAD
    0x08002698   0x08002698   0x00000032   Code   RO          186    .text.UnlockRecord  eventrecorder.o
    0x080026ca   0x080026ca   0x00000006   PAD
    0x080026d0   0x080026d0   0x00000012   Code   RO          174    .text.UnlockTS_Overflow  eventrecorder.o
    0x080026e2   0x080026e2   0x00000006   PAD
    0x080026e8   0x080026e8   0x0000001a   Code   RO          176    .text.UpdateTS      eventrecorder.o
    0x08002702   0x08002702   0x00000006   PAD
    0x08002708   0x08002708   0x0000003c   Code   RO          305    .text.__NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x08002744   0x08002744   0x00000004   PAD
    0x08002748   0x08002748   0x00000020   Code   RO           99    .text._mutex_acquire  rtx_lib.o
    0x08002768   0x08002768   0x00000012   Code   RO          103    .text._mutex_free   rtx_lib.o
    0x0800277a   0x0800277a   0x00000006   PAD
    0x08002780   0x08002780   0x00000032   Code   RO           97    .text._mutex_initialize  rtx_lib.o
    0x080027b2   0x080027b2   0x00000006   PAD
    0x080027b8   0x080027b8   0x0000001c   Code   RO          101    .text._mutex_release  rtx_lib.o
    0x080027d4   0x080027d4   0x00000004   PAD
    0x080027d8   0x080027d8   0x00000008   Code   RO           89    .text._platform_post_stackheap_init  rtx_lib.o
    0x080027e0   0x080027e0   0x00000020   Code   RO          192    .text.atomic_inc32  eventrecorder.o
    0x08002800   0x08002800   0x00000024   Code   RO          194    .text.atomic_inc8   eventrecorder.o
    0x08002824   0x08002824   0x00000004   PAD
    0x08002828   0x08002828   0x00000020   Code   RO          180    .text.atomic_wr32   eventrecorder.o
    0x08002848   0x08002848   0x00000028   Code   RO          178    .text.atomic_wr8    eventrecorder.o
    0x08002870   0x08002870   0x00000082   Code   RO          146    .text.crc16_ccitt   eventrecorder.o
    0x080028f2   0x080028f2   0x00000006   PAD
    0x080028f8   0x080028f8   0x0000005a   Code   RO            8    .text.main          main.o
    0x08002952   0x08002952   0x00000002   PAD
    0x08002954   0x08002954   0x00000024   Code   RO          766    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x08002978   0x08002978   0x0000002c   Code   RO          560    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x080029a4   0x080029a4   0x00000028   Code   RO          576    .text.osKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x080029cc   0x080029cc   0x0000002c   Code   RO          554    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x080029f8   0x080029f8   0x00000024   Code   RO          564    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x08002a1c   0x08002a1c   0x00000070   Code   RO          943    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002a8c   0x08002a8c   0x00000080   Code   RO          941    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002b0c   0x08002b0c   0x00000024   Code   RO          832    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08002b30   0x08002b30   0x00000024   Code   RO          838    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08002b54   0x08002b54   0x00000024   Code   RO          828    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x08002b78   0x08002b78   0x00000024   Code   RO          834    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08002b9c   0x08002b9c   0x00000004   PAD
    0x08002ba0   0x08002ba0   0x0000002e   Code   RO          129    .text.osRtxErrorNotify  rtx_config.o
    0x08002bce   0x08002bce   0x00000002   PAD
    0x08002bd0   0x08002bd0   0x00000008   Code   RO          127    .text.osRtxIdleThread  rtx_config.o
    0x08002bd8   0x08002bd8   0x00000004   Code   RO          552    .text.osRtxKernelErrorNotify  RTX_CM4F.lib(rtx_kernel.o)
    0x08002bdc   0x08002bdc   0x00000002   Code   RO          550    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x08002bde   0x08002bde   0x0000006c   Code   RO          869    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x08002c4a   0x08002c4a   0x00000042   Code   RO          871    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x08002c8c   0x08002c8c   0x00000036   Code   RO          867    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x08002cc2   0x08002cc2   0x0000003a   Code   RO          883    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x08002cfc   0x08002cfc   0x0000004a   Code   RO          885    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x08002d46   0x08002d46   0x00000038   Code   RO          881    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x08002d7e   0x08002d7e   0x000000aa   Code   RO          965    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002e28   0x08002e28   0x00000024   Code   RO          933    .text.osRtxMessageQueueTimerSetup  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002e4c   0x08002e4c   0x00000048   Code   RO          824    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08002e94   0x08002e94   0x00000048   Code   RO          826    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x08002edc   0x08002edc   0x00000088   Code   RO          997    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08002f64   0x08002f64   0x00000070   Code   RO          999    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x08002fd4   0x08002fd4   0x00000034   Code   RO          640    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x08003008   0x08003008   0x0000007c   Code   RO          648    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x08003084   0x08003084   0x0000003c   Code   RO          644    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x080030c0   0x080030c0   0x00000050   Code   RO          632    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x08003110   0x08003110   0x00000020   Code   RO          732    .text.osRtxThreadDestroy  RTX_CM4F.lib(rtx_thread.o)
    0x08003130   0x08003130   0x00000050   Code   RO          638    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x08003180   0x08003180   0x00000058   Code   RO          724    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x080031d8   0x080031d8   0x0000001e   Code   RO          730    .text.osRtxThreadJoinWakeup  RTX_CM4F.lib(rtx_thread.o)
    0x080031f6   0x080031f6   0x00000012   Code   RO          624    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x08003208   0x08003208   0x0000002c   Code   RO          622    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x08003234   0x08003234   0x00000014   Code   RO          628    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08003248   0x08003248   0x00000026   Code   RO          626    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x0800326e   0x0800326e   0x00000028   Code   RO          698    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x08003296   0x08003296   0x00000002   PAD
    0x08003298   0x08003298   0x00000014   Code   RO          630    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x080032ac   0x080032ac   0x00000014   Code   RO          634    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x080032c0   0x080032c0   0x00000034   Code   RO          650    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x080032f4   0x080032f4   0x0000000c   Code   RO          636    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x08003300   0x08003300   0x0000003c   Code   RO          646    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x0800333c   0x0800333c   0x00000030   Code   RO          642    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x0800336c   0x0800336c   0x00000078   Code   RO          995    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x080033e4   0x080033e4   0x00000020   Code   RO          782    .text.osRtxTimerSetup  RTX_CM4F.lib(rtx_timer.o)
    0x08003404   0x08003404   0x00000020   Code   RO          786    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x08003424   0x08003424   0x00000070   Code   RO          784    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x08003494   0x08003494   0x0000000c   Code   RO          682    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x080034a0   0x080034a0   0x00000024   Code   RO          654    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x080034c4   0x080034c4   0x00000024   Code   RO          672    .text.osThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x080034e8   0x080034e8   0x00000036   Code   RO           95    .text.os_kernel_is_active  rtx_lib.o
    0x0800351e   0x0800351e   0x00000016   Code   RO          770    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x08003534   0x08003534   0x00000008   Code   RO          562    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x0800353c   0x0800353c   0x0000000c   Code   RO          578    .text.svcRtxKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x08003548   0x08003548   0x00000100   Code   RO          592    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08003648   0x08003648   0x0000008c   Code   RO          594    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x080036d4   0x080036d4   0x000000cc   Code   RO          977    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080037a0   0x080037a0   0x00000118   Code   RO          935    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080038b8   0x080038b8   0x000000a8   Code   RO          973    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08003960   0x08003960   0x00000090   Code   RO          844    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x080039f0   0x080039f0   0x000000ac   Code   RO          850    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08003a9c   0x08003a9c   0x00000068   Code   RO          840    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x08003b04   0x08003b04   0x000000b4   Code   RO          846    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08003bb8   0x08003bb8   0x0000004c   Code   RO          728    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x08003c04   0x08003c04   0x000001e8   Code   RO          652    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x08003dec   0x08003dec   0x00000038   Code   RO          714    .text.svcRtxThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x08003e24   0x08003e24   0x0000001a   Code   RO         1051    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08003e3e   0x08003e3e   0x00000002   PAD
    0x08003e40   0x08003e40   0x00000070   Data   RO          109    .rodata             rtx_lib.o
    0x08003eb0   0x08003eb0   0x00000038   Data   RO          112    .rodata             rtx_lib.o
    0x08003ee8   0x08003ee8   0x00000010   Data   RO          541    .rodata.AHBPrescTable  system_stm32f7xx.o
    0x08003ef8   0x08003ef8   0x00000018   Data   RO          197    .rodata.EventRecorderInfo  eventrecorder.o
    0x08003f10   0x08003f10   0x00000008   Data   RO           81    .rodata.LED_PIN     led_746g_discovery.o
    0x08003f18   0x08003f18   0x00000004   Data   RO          111    .rodata.osRtxUserSVC  rtx_lib.o
    0x08003f1c   0x08003f1c   0x00000024   Data   RO          106    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08003f40   0x08003f40   0x00000018   Data   RO          108    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08003f58   0x08003f58   0x00000024   Data   RO          107    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08003f7c   0x08003f7c   0x0000000d   Data   RO           46    .rodata.str1.1      led_thread.o
    0x08003f89   0x08003f89   0x00000003   PAD
    0x08003f8c   0x08003f8c   0x0000000b   Data   RO          612    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x08003f97   0x08003f97   0x00000001   PAD
    0x08003f98   0x08003f98   0x00000020   Data   RO         1223    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20010000, Load base: 0x08003fc0, Size: 0x00009148, Max: 0x0003f800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20010000   0x08003fc0   0x00000004   Data   RW          540    .data.SystemCoreClock  system_stm32f7xx.o
    0x20010004   0x08003fc4   0x000000a4   Data   RW          613    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x200100a8   0x08004068   0x0000000a   Data   RW           20    .data.string        main.o
    0x200100b2   0x08004072   0x00000002   PAD
    0x200100b4   0x08004074   0x00000004   Data   RW          293    .data.uwTickPrio    stm32f7xx_hal.o
    0x200100b8   0x08004078   0x00000008   PAD
    0x200100c0        -       0x00000060   Zero   RW         1090    .bss                c_w.l(libspace.o)
    0x20010120        -       0x00000004   Zero   RW           18    .bss.HAL_GetTick.ticks  main.o
    0x20010124        -       0x00000001   Zero   RW          198    .bss.TS_OverflowLock  eventrecorder.o
    0x20010125   0x08004078   0x0000001b   PAD
    0x20010140        -       0x000004a4   Zero   RW          196    .bss.noinit         eventrecorder.o
    0x200105e4   0x08004078   0x00000004   PAD
    0x200105e8        -       0x00008040   Zero   RW          105    .bss.os             rtx_lib.o
    0x20018628        -       0x00000001   Zero   RW         1027    .bss.os             RTX_CM4F.lib(os_systick.o)
    0x20018629   0x08004078   0x00000003   PAD
    0x2001862c        -       0x00000034   Zero   RW          117    .bss.os.msgqueue.cb  rtx_lib.o
    0x20018660        -       0x00000050   Zero   RW          118    .bss.os.msgqueue.mem  rtx_lib.o
    0x200186b0        -       0x00000088   Zero   RW          114    .bss.os.thread.cb   rtx_lib.o
    0x20018738        -       0x00000200   Zero   RW          115    .bss.os.thread.idle.stack  rtx_lib.o
    0x20018938        -       0x00000200   Zero   RW          116    .bss.os.thread.timer.stack  rtx_lib.o
    0x20018b38        -       0x00000001   Zero   RW          119    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20018b39   0x08004078   0x00000003   PAD
    0x20018b3c        -       0x00000004   Zero   RW           19    .bss.some_error     main.o
    0x20018b40        -       0x00000004   Zero   RW           33    .bss.tid_ButtonThread  button_thread.o
    0x20018b44        -       0x00000004   Zero   RW           45    .bss.tid_Thread     led_thread.o
    0x20018b48        -       0x00000200   Zero   RW          527    HEAP                startup_stm32f746xx.o
    0x20018d48        -       0x00000400   Zero   RW          526    STACK               startup_stm32f746xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       120          0          0          0          4        901   button_thread.o
       114          0          0          0          0       2790   buttons_746g_discovery.o
      2112          0         24          0       1189       8925   eventrecorder.o
       186          0          8          0          0       3339   led_746g_discovery.o
       134          0         13          0          4        970   led_thread.o
       696          0          0         10          8       4993   main.o
        54          6          0          0          0        740   rtx_config.o
       212          0        268          0      34125       7491   rtx_lib.o
        64         26        456          0       1536        908   startup_stm32f746xx.o
        48          0          0          4          0       7988   stm32f7xx_hal.o
       316          0          0          0          0      10647   stm32f7xx_hal_cortex.o
      1096          0          0          0          0       5401   stm32f7xx_hal_gpio.o
       198          0          0          0          0       5917   stm32f7xx_hal_pwr_ex.o
      2666          0          0          0          0       8239   stm32f7xx_hal_rcc.o
       320          0         16          4          0       3383   system_stm32f7xx.o

    ----------------------------------------------------------------------
      8554         32        820         20      36908      72632   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       218          0          3          2         42          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       200         12          0          0          0        634   irq_armv7m.o
       114         20          0          0          1       3199   os_systick.o
        58          4          0          0          0       2797   rtx_delay.o
       604         52         11        164          0      16781   rtx_kernel.o
       228          0          0          0          0       2590   rtx_memory.o
       188          0          0          0          0      16188   rtx_mempool.o
      1296         24          0          0          0      18765   rtx_msgqueue.o
       888         28          0          0          0      10068   rtx_mutex.o
       368         18          0          0          0       5444   rtx_system.o
      1728         52          0          0          0      32486   rtx_thread.o
       244         12          0          0          0      10433   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       240          0          0          0          0        100   lludivv7m.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      6926        242         12        164        100     120481   Library Totals
        34          4          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5916        222         11        164          1     119385   RTX_CM4F.lib
       950         16          0          0         96        980   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      6926        242         12        164        100     120481   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15480        274        832        184      37008     192305   Grand Totals
     15480        274        832        184      37008     192305   ELF Image Totals
     15480        274        832        184          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16312 (  15.93kB)
    Total RW  Size (RW Data + ZI Data)             37192 (  36.32kB)
    Total ROM Size (Code + RO Data + RW Data)      16496 (  16.11kB)

==============================================================================

